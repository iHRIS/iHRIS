{"version":3,"sources":["webpack:///../../../src/directives/touch/index.ts","webpack:///../../../src/directives/resize/index.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts"],"names":["handleGesture","wrapper","touchendY","dirRatio","minDistance","touchendX","Math","touchstartX","touchstartY","touch","event","Object","createHandlers","touchmoveX","touchmoveY","offsetX","offsetY","left","value","right","up","down","start","move","end","touchstart","e","touchend","touchmove","inserted","binding","target","el","options","passive","handlers","vnode","eventName","unbind","Touch","callback","window","Resize","baseMixins","mixins","name","props","allowOverflow","light","dark","maxWidth","type","Number","default","minWidth","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","zIndex","data","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","activator","top","bottom","width","height","offsetTop","scrollHeight","offsetLeft","content","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","stackMinZIndex","computed","computedLeft","a","this","c","activatorLeft","attach","isNaN","parseInt","computedTop","hasActivator","$slots","$scopedSlots","watch","disabled","val","isActive","beforeMount","methods","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","deactivate","genActivatorListeners","listeners","onClick","getInnerHeight","document","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","requestAnimationFrame","cb","startTransition","Promise","resolve","updateDimensions","provide","isInMenu","theme","directives","ClickOutside","auto","closeOnClick","closeOnContentClick","disableKeys","maxHeight","openOnHover","origin","transition","Boolean","calculatedTopAuto","defaultOffset","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","parseFloat","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","calculatedTop","hasClickableTiles","find","tile","styles","transformOrigin","activeZIndex","next","prev","classList","remove","created","$attrs","hasOwnProperty","mounted","calcScrollPosition","$el","$refs","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","changeListIndex","closeConditional","contains","genActivatorAttributes","attributes","id","genTransition","$createElement","genDirectives","args","include","genContent","attrs","role","staticClass","class","menuable__content__active","contentClass","ref","on","click","keydown","onKeyDown","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","setTimeout","onResize","clearTimeout","render","arg","h","showLazyContent","root"],"mappings":"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","file":"js/chunk-1962ba35.f4197e02.js","sourcesContent":["import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n"],"sourceRoot":""}
{"version":3,"file":"js/fhir-main.f01bbe92.js","mappings":"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","sources":["webpack://iHRIS-v5/./src/components/fhir/fhir-choice.vue?220d","webpack://iHRIS-v5/src/components/fhir/fhir-choice.vue","webpack://iHRIS-v5/./src/components/fhir/fhir-choice.vue?e9ef","webpack://iHRIS-v5/./src/components/fhir/fhir-choice.vue","webpack://iHRIS-v5/./src/components/fhir/fhir-text.vue?df81","webpack://iHRIS-v5/src/components/fhir/fhir-text.vue","webpack://iHRIS-v5/./src/components/fhir/fhir-text.vue?5e71","webpack://iHRIS-v5/./src/components/fhir/fhir-text.vue","webpack://iHRIS-v5/./src/components/ihris/ihris-questionnaire-group.vue?fce5","webpack://iHRIS-v5/src/components/ihris/ihris-questionnaire-group.vue","webpack://iHRIS-v5/./src/components/ihris/ihris-questionnaire-group.vue?8420","webpack://iHRIS-v5/./src/components/ihris/ihris-questionnaire-group.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.hide)?_c('v-container',[_c('v-autocomplete',{attrs:{\"loading\":_vm.loading,\"label\":_vm.label,\"items\":_vm.items.filter(function (x) { return !x.code.includes('(deactivated)'); }),\"outlined\":\"\",\"hide-details\":\"auto\",\"error-messages\":_vm.errors,\"item-text\":\"display\",\"item-value\":\"code\",\"rules\":_vm.rules,\"dense\":\"\",\"clearable\":\"\"},on:{\"change\":function($event){_vm.errors = []}},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(_vm._s(_vm.$t((\"App.fhir-resources-texts.\" + _vm.label)))+\" \"),(_vm.required)?_c('span',{staticClass:\"red--text font-weight-bold\"},[_vm._v(\"*\")]):_vm._e()]},proxy:true}],null,false,3654946902),model:{value:(_vm.valueCode),callback:function ($$v) {_vm.valueCode=$$v},expression:\"valueCode\"}})],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container v-if=\"!hide\">\n    <v-autocomplete \n      :loading=\"loading\" \n      :label=\"label\" \n      v-model=\"valueCode\" \n      :items=\"items.filter(x => !x.code.includes('(deactivated)'))\"\n      outlined \n      hide-details=\"auto\" \n      :error-messages=\"errors\"\n      item-text=\"display\"\n      item-value=\"code\"\n      :rules=\"rules\"\n      dense\n      @change=\"errors = []\"\n      clearable\n    >\n      <template #label>{{$t(`App.fhir-resources-texts.${label}`)}} <span v-if=\"required\" class=\"red--text font-weight-bold\">*</span></template>\n    </v-autocomplete>\n  </v-container>\n</template>\n\n<script>\n/*\nconst itemSort = (a,b) => {\n  return (a.display === b.display ? (a.code === b.code ? 0 : (a.code < b.code ? -1: 1)) : (a.display < b.display ? -1 : 1) )\n}\n*/\nimport { eventBus } from \"@/main\";\nimport { dataDisplay } from \"@/mixins/dataDisplay\"\nexport default {\n  name: \"fhir-coding\",\n  props: [\"id\", \"field\", \"definition\", \"label\", \"path\", \"binding\", \"edit\", \"min\", \"max\", \"constraints\", \"displayCondition\", \"enableBehavior\", \"slotProps\", \"initial\"],\n  mixins: [dataDisplay],\n  data: function() {\n    return {\n      value: { system: \"\", code: \"\", display: \"\" },\n      hiddenVal: \"\",\n      savedValueCode: \"\",\n      valueCode: \"\",\n      loading: true,\n      errors: [],\n      //error: false,\n      items: [],\n      source: { path: \"\", data: {}, binding: this.binding },\n      qField: \"valueCoding\",\n      lockWatch: false\n    }\n  },\n  created: function() {\n    //this function is defined under dataDisplay mixin\n    this.hideShowField(this.displayCondition, this.enableBehavior)\n    this.setupData()\n    if(this.initial && !this.$route.params.id) {\n      this.value = this.initial\n    }\n  },\n  watch: {\n    hide(val) {\n      if(val) {\n        this.hiddenVal = this.valueCode\n        this.valueCode = \"\"\n        this.value = { system: \"\", code: \"\", display: \"\" }\n      } else {\n        this.valueCode = this.hiddenVal\n      }\n    },\n    slotProps: {\n      handler() {\n        if ( !this.lockWatch ) {\n          this.setupData()\n        }\n      },\n      deep: true\n    },\n    valueCode: function() {\n      if ( this.items ) {\n        this.value = this.items.find( item => item.code === this.valueCode )\n      }\n      if(!this.value) {\n        eventBus.$emit(this.path, \"\")\n        return\n      }\n      eventBus.$emit(this.path, this.value.system + \"#\" + this.value.code)\n    }\n  },\n  methods: {\n    setupData: function() {\n      if ( this.slotProps && this.slotProps.source) {\n        this.source = { path: this.slotProps.source.path+\".\"+this.field, data: {}, \n          binding: this.binding || this.slotProps.source.binding }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n          this.savedValueCode = this.source.data\n          this.lockWatch = true\n          //console.log(\"SET value to \", this.source.data, this.slotProps.input)\n        } else {\n          let expression = this.$fhirutils.pathFieldExpression( this.field )\n          this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, expression )\n          let value = null\n          if ( this.source.data.length == 1 ) {\n            value = this.source.data[0]\n          } else {\n            //check if the path is an array and use path index to get value\n            let pathSlices = this.path.split(\"[\")\n            let index\n            for(let slice of pathSlices) {\n              let slices = slice.split(\"]\")\n              if(Number.isInteger(parseInt(slices[0]))) {\n                index = slices[0]\n              }\n            }\n            if(index || index == 0) {\n              value = this.source.data[index]\n            }\n          }\n          if ( value != null ) {\n            if(typeof value === 'object') {\n              this.value = value\n              this.savedValueCode = this.value.code\n            } else {\n              this.savedValueCode = value\n            }\n            this.lockWatch = true\n          }\n        }\n        this.disabled = this.readOnlyIfSet && (!!this.value)\n      }\n      let binding = this.binding || this.slotProps.source.binding\n      let params = {}\n      let language = this.$i18n.locale\n      if(language){\n        params = { language }\n      }\n      this.$fhirutils.expand( binding,params ).then( items => {\n        this.items = items\n        let item = this.items.find( item => this.savedValueCode && item.code === this.savedValueCode )\n        if(item) {\n          this.value = item\n        }\n        if(this.value) {\n          this.valueCode = this.value.code\n        }\n        this.loading = false\n      } ).catch( err => {\n        console.log(err)\n        //this.error = true\n        this.errors.push( err.message )\n        this.loading = false\n      } )\n    }\n  },\n  computed: {\n    required: function() {\n      return this.min > 0 \n    },\n    rules: function() {\n      if ( this.required ) {\n        return [ v => !!v || this.$t(`App.fhir-resources-texts.${this.label}`)+\" \" + this.$t(`App.hardcoded-texts.is required`) ]\n      } else {\n        return []\n      }\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./fhir-choice.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./fhir-choice.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./fhir-choice.vue?vue&type=template&id=3b5f0ba6&\"\nimport script from \"./fhir-choice.vue?vue&type=script&lang=js&\"\nexport * from \"./fhir-choice.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAutocomplete,VContainer})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.hide)?_c('ihris-element',{attrs:{\"edit\":_vm.edit,\"loading\":false},scopedSlots:_vm._u([{key:\"form\",fn:function(){return [_c('v-textarea',{attrs:{\"error-messages\":_vm.errors,\"disabled\":_vm.disabled,\"label\":_vm.display,\"outlined\":\"\",\"hide-details\":\"auto\",\"rules\":_vm.rules,\"dense\":\"\"},on:{\"change\":function($event){_vm.errors = []}},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(_vm._s(_vm.$t((\"App.fhir-resources-texts.\" + _vm.display)))+\" \"),(_vm.required)?_c('span',{staticClass:\"red--text font-weight-bold\"},[_vm._v(\"*\")]):_vm._e()]},proxy:true}],null,false,3110236810),model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})]},proxy:true},{key:\"header\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.$t((\"App.fhir-resources-texts.\" + _vm.display)))+\" \")]},proxy:true},{key:\"value\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.value)+\" \")]},proxy:true}],null,false,865592460)}):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <ihris-element :edit=\"edit\" :loading=\"false\" v-if=\"!hide\">\n    <template #form>\n      <v-textarea\n        :error-messages=\"errors\"\n        @change=\"errors = []\"\n        :disabled=\"disabled\"\n        :label=\"display\"\n        v-model=\"value\"\n        outlined\n        hide-details=\"auto\"\n        :rules=\"rules\"\n        dense\n      >\n        <template #label>{{$t(`App.fhir-resources-texts.${display}`)}} <span v-if=\"required\" class=\"red--text font-weight-bold\">*</span></template>\n      </v-textarea>\n    </template>\n    <template #header>\n      {{$t(`App.fhir-resources-texts.${display}`)}}\n    </template>\n    <template #value>\n      {{value}}\n    </template>\n  </ihris-element>\n</template>\n\n<script>\nimport IhrisElement from \"../ihris/ihris-element.vue\"\nimport { eventBus } from \"@/main\";\nimport { dataDisplay } from \"@/mixins/dataDisplay\"\n\nexport default {\n  name: \"fhir-text\",\n  props: [ \"field\", \"label\", \"min\", \"max\", \"path\", \"edit\", \"sliceName\", \"slotProps\", \"base-min\", \"base-max\", \"readOnlyIfSet\",\n    \"constraints\", \"displayCondition\"],\n  components: {\n    IhrisElement\n  },\n  mixins: [dataDisplay],\n  data: function() {\n    return {\n      source: { path: \"\", data: {} },\n      value: \"\",\n      qField: \"valueText\",\n      disabled: false,\n      errors: [],\n      lockWatch: false\n    }\n  },\n  created: function() {\n    //this function is defined under dataDisplay mixin\n    this.hideShowField(this.displayCondition)\n    this.setupData()\n  },\n  watch: {\n    slotProps: {\n      handler() {\n        //console.log(\"WATCH STRING\",this.field,this.path,this.slotProps)\n        if ( !this.lockWatch ) {\n          this.setupData()\n        }\n      },\n      deep: true\n    },\n    value(val) {\n      eventBus.$emit(this.path, val)\n    }\n  },\n  methods: {\n    setupData() {\n      if ( this.slotProps && this.slotProps.source ) {\n        this.source = { path: this.slotProps.source.path+\".\"+this.field, data: {} }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n          this.value = this.source.data\n          this.lockWatch = true\n          //console.log(\"SET value to \", this.source.data, this.slotProps.input)\n        } else {\n          let expression = this.$fhirutils.pathFieldExpression( this.field )\n          this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, expression )\n          //console.log(\"STR FHIRPATH\", this.slotProps.source.data, this.field)\n          let value = null\n          if ( this.source.data.length == 1 ) {\n            value = this.source.data[0]\n          } else {\n            //check if the path is an array and use path index to get value\n            let pathSlices = this.path.split(\"[\")\n            let index\n            for(let slice of pathSlices) {\n              let slices = slice.split(\"]\")\n              if(Number.isInteger(parseInt(slices[0]))) {\n                index = slices[0]\n              }\n            }\n            if(index || index == 0) {\n              value = this.source.data[index]\n            }\n          }\n          if ( value != null ) {\n            this.value = value\n            this.lockWatch = true\n          }\n        }\n        this.disabled = this.readOnlyIfSet && (!!this.value)\n        //console.log(this.source)\n      }\n    }\n  },\n  computed: {\n    index: function() {\n      if ( this.slotProps ) return this.slotProps.input.index\n      else return undefined\n    },\n    display: function() {\n      if ( this.slotProps && this.slotProps.input) return this.slotProps.input.label\n      else return this.label\n    },\n    required: function() {\n      return (this.index || 0) < this.min \n    },\n    rules: function() {\n      if ( this.required ) {\n        return [ v => !!v || this.$t(`App.fhir-resources-texts.${this.display}`)+\" \" + this.$t(`App.hardcoded-texts.is required`) ]\n      } else {\n        return []\n      }\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./fhir-text.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./fhir-text.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./fhir-text.vue?vue&type=template&id=22a983f5&\"\nimport script from \"./fhir-text.vue?vue&type=script&lang=js&\"\nexport * from \"./fhir-text.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VTextarea})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.hide)?_c('v-card',{staticClass:\"mx-auto\",attrs:{\"max-width\":\"700\",\"outlined\":\"\"}},[_c('v-card-title',{staticClass:\"primary white--text font-weight-bold\"},[_vm._v(_vm._s(_vm.$t((\"App.fhir-resources-texts.\" + _vm.label))))]),_c('v-divider'),_vm._l((_vm.errors),function(error,idx){return _c('v-card-text',{key:idx,staticClass:\"error white--text font-weight-bold\"},[_vm._v(_vm._s(error))])}),_c('v-card-text',{staticClass:\"my-3\"},[_vm._t(\"default\",null,{\"source\":_vm.source})],2)],2):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-card \n    class=\"mx-auto\"\n    max-width=\"700\"\n    outlined\n    v-if=\"!hide\"\n  >\n    <v-card-title class=\"primary white--text font-weight-bold\">{{ $t(`App.fhir-resources-texts.${label}`) }}</v-card-title>\n    <v-divider></v-divider>\n    <v-card-text v-for=\"(error,idx) in errors\" :key=\"idx\" class=\"error white--text font-weight-bold\">{{error}}</v-card-text>\n    <v-card-text class=\"my-3\">\n      <slot :source=\"source\"></slot>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport { dataDisplay } from \"@/mixins/dataDisplay\"\nexport default {\n  name: \"ihris-questionnaire-group\",\n  props: [\"id\", \"profile\", \"sliceName\", \"fieldType\", \"field\", \"label\", \"slotProps\", \"path\", \"constraints\", \"limit\", \"displayCondition\", \"enableBehavior\"],\n  mixins: [dataDisplay],\n  data: function() {\n    return {\n      isQuestionnaireGroup: true,\n      source: { path: \"\", data: [] },\n      errors: []\n    }\n  },\n  created: function() {\n    this.hideShowField(this.displayCondition, this.enableBehavior)\n    this.setupData()\n  },\n  watch: {\n    slotProps: {\n      handler() {\n        this.setupData()\n      },\n      deep: true\n    }\n  },\n  methods: {\n    setupData: function() {\n      if ( this.slotProps && this.slotProps.source ) {\n        this.source = { path: this.slotProps.source.path+\".\"+this.field, data: {} }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n          this.source.fromArray = true\n        } else {\n          let url\n          if ( this.profile ) {\n            url = this.profile\n          } else {\n            url = this.sliceName\n          }\n          if(url) {\n            let expression = this.field.replace(/([^:]+):(.+)/, \"$1.where(url='\"+url+\"')\")\n            this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, expression )\n            if(this.limit) {\n              this.source.data = this.$fhirpath.evaluate( this.source.data, this.limit)\n            }\n          } else {\n            if(this.limit) {\n              this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, this.limit )\n            } else {\n              this.source = this.slotProps.source\n            }\n          }\n        }\n        //console.log(this.source)\n        if(this.source.data.length > 1) {\n          //check if the path is an array and use path index to get value\n          let pathSlices = this.path.split(\"[\")\n          let index\n          for(let slice of pathSlices) {\n            let slices = slice.split(\"]\")\n            if(Number.isInteger(parseInt(slices[0]))) {\n              index = slices[0]\n            }\n          }\n          if(index || index == 0) {\n            this.source.data = this.source.data[index]\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ihris-questionnaire-group.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ihris-questionnaire-group.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ihris-questionnaire-group.vue?vue&type=template&id=45f4d00c&\"\nimport script from \"./ihris-questionnaire-group.vue?vue&type=script&lang=js&\"\nexport * from \"./ihris-questionnaire-group.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\ninstallComponents(component, {VCard,VCardText,VCardTitle,VDivider})\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","hide","_e","attrs","loading","label","items","filter","x","code","includes","errors","rules","on","$event","scopedSlots","_u","key","fn","_v","_s","$t","staticClass","proxy","model","value","callback","$$v","valueCode","expression","staticRenderFns","name","props","mixins","data","system","display","hiddenVal","savedValueCode","source","path","binding","qField","lockWatch","created","watch","slotProps","handler","deep","eventBus","methods","setupData","index","params","language","catch","err","console","computed","required","component","VAutocomplete","edit","disabled","components","IhrisElement","VTextarea","_l","error","idx","_t","isQuestionnaireGroup","url","VCard"],"sourceRoot":""}